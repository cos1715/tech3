{"version":3,"sources":["components/Header.js","components/Rows.js","translations/eng.js","translations/ua.js","container/App.js","serviceWorker.js","index.js","assets/me.jpg"],"names":["Header","_ref","lang","isEng","setIsEng","react_default","a","createElement","Fragment","className","resume","onClick","btn_txt","src","Img","alt","Rows","info","map","elem","key","title","text","eng","ua","App","_useState","useState","_useState2","Object","slicedToArray","EngVersion","UaVersion","components_Header","components_Rows","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","container_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c228c98f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Img from '../assets/me.jpg';\r\n\r\nconst Header = ({ lang, isEng, setIsEng }) => {  \r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <header className=\"display-3\">\r\n          <h1 className=\"App-title\">{lang.resume}</h1>\r\n        </header>\r\n        <button className=\"btn btn-primary btn-lg float-right\" onClick={() => setIsEng(!isEng)}>\r\n          {lang.btn_txt}\r\n        </button>\r\n      </div>\r\n      <img src={Img} alt=\"me\" className=\"w-25 mb-3\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Rows = ({ lang }) => {\r\n  const cvElements = lang.info.map(elem =>\r\n    <tr key={elem.title}>\r\n      <td>{elem.title}</td>\r\n      <td>{elem.text}</td>\r\n    </tr>\r\n  );\r\n\r\n  return cvElements;\r\n};\r\n\r\nexport default Rows;","export default {\r\n  btn_txt: 'UKR',\r\n  resume: 'Resume',\r\n  info: [\r\n    {\r\n      \"title\": \"Name:\",\r\n      \"text\": \"Taras Samoilenko\",\r\n    },\r\n    {\r\n      \"title\": \"Date of birth:\",\r\n      \"text\": \"15.11.1997\",\r\n    },\r\n    {\r\n      \"title\": \"Goal:\",\r\n      \"text\": \"Gain experience and also earn new knowledge\",\r\n    },\r\n    {\r\n      \"title\": \"Languages:\",\r\n      \"text\": \"Ukrainian, English\",\r\n    },\r\n    {\r\n      \"title\": \"Programming skills\",\r\n      \"text\": \"HTML/CSS/JS, React, Angular\",\r\n    },\r\n    {\r\n      \"title\": \"Education:\",\r\n      \"text\": \"Lviv linguistic gymnasium, Lviv polytechnic national university: computer science\",\r\n    },\r\n    {\r\n      \"title\": \"Contacts\",\r\n      \"text\": \"Phone: 555-555-555-555\"\r\n    },\r\n    {\r\n      \"title\": \"Email\",\r\n      \"text\": \"tsamoilenko97@gmail.com\"\r\n    }\r\n  ]\r\n};","export default {\r\n  btn_txt: 'ENG',\r\n  resume: 'Резюме',\r\n  info: [\r\n    {\r\n      \"title\": \"Ім'я:\",\r\n      \"text\": \"Тарас Самойленко\",\r\n    },\r\n    {\r\n      \"title\": \"Дата народження:\",\r\n      \"text\": \"15.11.1997\",\r\n    },\r\n    {\r\n      \"title\": \"Ціль:\",\r\n      \"text\": \"Здобути нові знання і набратись досвіду роботи\",\r\n    },\r\n    {\r\n      \"title\": \"Мови:\",\r\n      \"text\": \"Українська, англійська\",\r\n    },\r\n    {\r\n      \"title\": \"Навички програмування\",\r\n      \"text\": \"HTML/CSS/JS, React, Angular\",\r\n    },\r\n    {\r\n      \"title\": \"Навчання:\",\r\n      \"text\": \"Львівська лінгвістична гімназія, Національний університет 'Львівська Політехніка': Комп'ютерні науки\",\r\n    },\r\n    {\r\n      \"title\": \"Контакти\",\r\n      \"text\": \"тел.: 555-555-555-555\"\r\n    },\r\n    {\r\n      \"title\": \"Email\",\r\n      \"text\": \"tsamoilenko97@gmail.com\"\r\n    }\r\n  ]\r\n};","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Rows from '../components/Rows';\r\nimport EngVersion from '../translations/eng';\r\nimport UaVersion from '../translations/ua';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst App = () => {\r\n  const [isEng, setIsEng] = useState(true);\r\n  const lang = isEng ? EngVersion : UaVersion;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header lang={lang} isEng={isEng} setIsEng={setIsEng} />\r\n      <table className=\"table\">\r\n        <tbody>\r\n          <Rows lang={lang} />\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/me.72b4f909.jpg\";"],"sourceRoot":""}